#!/bin/bash

# This script canonicalize positional arguments for further straightforward shell parsing:
# - expands adjacent 1-char flags into independant ones:
#   "-abc" -> "-a" "-b" "-c"
# - splits adjacent 1-char parameters in two arguments:
#   "-aSTRING" -> "-a" "STRING"
# - shortens long-option flags into single dash:
#   "--help" -> "-help"
# - shortens and splits adjacent long-option parameters in two arguments:
#   "--file=NAME" -> "-file=" "NAME"
# - positional arguments are parsed until a "--" is encountered

# Must be run by sourcing it (. script) after setting in "args_par" an adjacent set of the 1-char
# parametric options (those expecting a parameter, if any).

unset args args_i args_a
while (( $# )); do
    case "$1" in
        -[[:alnum:]]*)
            for (( args_i=1; args_i < ${#1}; args_i++ )); do
                args+=("-${1:$args_i:1}")
                if [[ ${1:$args_i:1} = [$args_par] ]]; then
                    # parameter and assignment adjacent without space?
                    if (( args_i < ${#1}-1 )); then
                        args+=("${1:$args_i+1}")
                    else
                        args+=("$2")
                        shift
                    fi
                    break
                fi
            done ;;
        --[[:alnum:]]*=*)
            args_a="${1:1}"
            args+=("${args_a%%=*}=" "${args_a#*=}") ;;
        --[[:alnum:]]*) args+=("${1:1}") ;;
        --) break ;;
        *) args+=("$1") ;;
    esac
    shift
done
set -- "${args[@]}" "$@"
