#!/bin/bash

(( $# )) || {
cat >&2 <<EOF
RDP tunnelling through SSH

Syntax:  ${0##*/} [ssh options] USER@SSH_SERVER[:SSH_PORT] [xfreerdp options] [RDP_SERVER]
EOF
    exit
}

# Setup SSH client arguments
ssh=(ssh -S /dev/shm/%C)
while [[ $1 != *?@?* ]]; do
    (( $# )) || {
        echo "Error: missing gateway address"
        exit
    }
    ssh+=("$1")
    shift
done
# Remote address can be indicated in compact (addr@user:port) or standard format (-p port addr@user)
if [[ $1 = *?:[0-9]* ]]; then
    ssh+=("-p${1#*:}" "${1%:*}")
else
    ssh+=("$1")
fi
shift

# Parse last argument to translate remote RDP address and port
case "${@: -1}" in
    [[:alnum:]]*:[0-9]*)
        # specific server: specific port
        rdp_server=${@: -1}
        i=$#-1 ;;
    [[:alnum:]]*)
        # specific server: default port
        rdp_server=${@: -1}:3389
        i=$#-1 ;;
    :[0-9]*)
        # server loopback: specific port
        rdp_server=127.0.0.1${@: -1}
        i=$#-1 ;;
    *)
        # server loopback: default port (as no valid specification found)
        rdp_server=127.0.0.1:3389
        i=$# ;;
esac

gw_name=$("${ssh[@]}" -Mo ControlPersist=3 'echo $HOSTNAME') \
&& rdp_port=$(python -c 'import socket; s=socket.socket(); s.bind(("", 0)); print(s.getsockname()[1]); s.close()') \
&& "${ssh[@]}" -fL localhost:$rdp_port:$rdp_server "sleep 3" \
&& xfreerdp3 \
    /dynamic-resolution \
    /floatbar:sticky:off \
    /network:auto \
    /cert:ignore \
    "${@:1:$i}" /v:127.0.0.1:$rdp_port \
    /t:"SSH '${ssh[@]: -1}'    Hostname '${gw_name^^}'    RDP '$rdp_server'"
